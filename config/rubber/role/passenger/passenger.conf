<%
  @path = '/etc/apache2/mods-available/passenger.conf'
  @post = 'cd /etc/apache2/mods-enabled && ln -fs ../mods-available/passenger.conf'
%>
<IfModule mod_passenger.c>
  PassengerRoot /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini
  PassengerDefaultRuby <%= rubber_env.passenger_ruby %>

  PassengerUserSwitching on
  PassengerUser <%= rubber_env.app_user %>
  PassengerGroup <%= rubber_env.app_user %>

  # max number of rails instances per appserver
  PassengerMaxPoolSize <%= rubber_env.max_app_connections %>

  # min number of rails instances per appserver (by setting this as the max, we make sure we only wait for workers to spawn on the first request)
  PassengerMinInstances <%= rubber_env.max_app_connections %>

  # Use PassengerMaxPoolSize for limit as we only have 1 app
  PassengerMaxInstancesPerApp 0

  # For performances sake, never shutdown rails instances when idle
  PassengerPoolIdleTime 0

  # For performances sake, never shutdown a rails instance after N requests
  PassengerMaxRequests 0

  # Passenger checks stuff like restart.txt on every request when this is 0
  PassengerStatThrottleRate <%= Rubber.env == 'production' ? '60' : '0' %>

  # Turning this on breaks mod_rewrite
  PassengerHighPerformance off

  # Cache framework code per application
  PassengerSpawnMethod smart

  # For performances sake, don't ever unload app spawner
  PassengerMaxPreloaderIdleTime 0

  # Don't show the friendly error pages in production because it could leak information the public shouldn't see.
  PassengerFriendlyErrorPages <%= Rubber.env == 'production' ? 'off' : 'on' %>
</IfModule>